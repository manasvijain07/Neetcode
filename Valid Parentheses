Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false


-----------------------------------

Soltuion 1 - 
TC - O(n)
SC - O(n)

class Solution {
    public boolean isValid(String s) {
        if(s == null || s.length() == 0)
            return true;
        
        Stack<Character> stack = new Stack<>();
        
        for(char c : s.toCharArray())
        {
            if(c == '(' || c == '{' || c == '[')
                stack.push(c);
            else if(!stack.isEmpty() && 
                   ((c == ')' && stack.peek() == '(') || 
                   (c == '}' && stack.peek() == '{') ||
                   (c == ']' && stack.peek() == '[')))
                stack.pop();
            else
                return false;
        }
        return stack.isEmpty();
    }
}
